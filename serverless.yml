# For full config options, check the docs:
#    docs.serverless.com

# this needs to match the name of the service in terraform
service: reviewapp

frameworkVersion: "=3.30.1"
provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'offline'}
  region: ${env:AWS_REGION, 'us-east-1'}
  apiGateway:
    shouldStartNameWithService: true
  deploymentBucket:
    maxPreviousDeploymentArtifacts: 5
    blockPublicAccess: true
    serverSideEncryption: AES256

package:
  excludeDevDependencies: true

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  config: ${file(serverlessConfig.js)}

functions:
  slack:
    handler: src/slack_handler.slackHandler
    environment:
      SLACK_SIGNING_SECRET: ${self:custom.config.signingSecret}
      SLACK_API_TOKEN: ${self:custom.config.apiToken}
      LOG_LEVEL: debug
    role: ${self:custom.config.slackbotLambdaRole}
    events:
      - http:
          path: slack
          method: post

  cloudwatch:
    handler: src/cloudwatch_handler.cloudwatchHandler
    environment:
      SLACK_SIGNING_SECRET: ${self:custom.config.signingSecret}
      SLACK_API_TOKEN: ${self:custom.config.apiToken}
      LOG_LEVEL: debug
    role: ${self:custom.config.slackbotLambdaRole}
    # We could set up the events in terraform instead of here.
    # We would need to put the ARN of the lambda as an input for
    # terraform and that might complicate bootstrapping
    events:
      - cloudwatchEvent:
          name: "codebuild_event"
          event:
            source:
              - "aws.codebuild"
            detail-type:
              - "CodeBuild Build State Change"
            detail:
              build-status:
                - "SUCCEEDED"
                - "FAILED"
                - "STOPPED"
              project-name:
                - "milmove-ephemeral"
  teardown:
    handler: src/teardown_handler.teardownHandler
    environment:
      SLACK_SIGNING_SECRET: ${self:custom.config.signingSecret}
      SLACK_API_TOKEN: ${self:custom.config.apiToken}
      LOG_LEVEL: debug
    role: ${self:custom.config.slackbotLambdaRole}
    events:
      - schedule: cron(15 3 * * ? *)
